import Report from "../../models/reportSchema.js";

const getAllReports = async (request, h) => {
  try {
    const reports = await Report.find({});
    return h.response({ status: "success", data: reports }).code(200);
  } catch (error) {
    console.error("Error fetching reports:", error);
    return h
      .response({ status: "fail", message: "Failed to fetch reports" })
      .code(500);
  }
};

export default getAllReports;

import React, { useState } from "react";
import HeroLaporan from "../components/Laporan/HeroLaporan";
import LaporanSection from "../components/Laporan/LaporanSection";
import { useEffect } from "react";
import { axiosInstance } from "../config";

export const Laporan = () => {
  const [dataSampah, setDataSampah] = useState([]);

  useEffect(() => {
    const fetchDataSampah = async () => {
      try {
        // 1. Ambil data reports
        const { data } = await axiosInstance.get("/reports");
        const reports = data?.data || [];

        // 2. Ambil semua userId yang unik
        const uniqueUserIds = [...new Set(reports.map((item) => item.userId))];

        // 3. Ambil data user secara paralel dengan Promise.all
        const userPromises = uniqueUserIds.map((id) => axiosInstance.get(`/user/${id}`).then((res) => res.data.data));
        const usersData = await Promise.all(userPromises);

        // 4. Buat mapping userId -> userData
        const userMap = {};
        usersData.forEach((user) => {
          userMap[user._id] = user;
        });

        // 5. Gabungkan data reports dengan data user
        const mergedData = reports.map((report) => {
          const user = userMap[report.userId] || {};
          return {
            ...report,
            username: user.username || "",
            profileUrl: user.profileUrl || "",
          };
        });

        // 6. Set data ke state
        setDataSampah(mergedData);
      } catch (error) {
        console.error("Error fetching data:", error);
      }
    };

    fetchDataSampah();
  }, []);

  const [searchParams, setSearchParams] = useState(null);
  console.log(searchParams);

  return (
    <>
      <HeroLaporan setSearchParams={setSearchParams} />
      <LaporanSection searchParams={searchParams} dataSampah={dataSampah} />
    </>
  );
};


import React, { useState } from "react";

import { LaporanKategori } from "./LaporanKategori";
import Card from "./Card";
import LaporanTerpopuler from "./LaporanTerpopuler";
import { LaporanPencarian } from "./LaporanPecarian";
import { SemuaLaporan } from "./SemuaLaporan";

const LaporanSection = ({ searchParams, dataSampah }) => {
  return (
    <section>
      <div className="xl:px-36 lg:px-32 sm:px-12 px-5 lg:py-20 py-10">
        {searchParams && <LaporanPencarian searchParams={searchParams} dataSampah={dataSampah} />}
        {/* <LaporanTerpopuler /> */}
        <SemuaLaporan dataSampah={dataSampah} />
        {/* <LaporanKategori /> */}
      </div>
    </section>
  );
};

export default LaporanSection;
import React, { useEffect, useState } from "react";
import Card from "./Card";
import terbaruIcon from "../../assets/Laporan/terbaru.svg";
import SkeletonCard from "../Skeleton/SkeletonCard";

export const SemuaLaporan = ({ dataSampah }) => {
  const [isLoading, setIsLoading] = useState(true);
  useEffect(() => {
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 2000);

    return () => clearTimeout(timer);
  }, []);

  return (
    <>
      <div className="flex items-center mt-12">
        <h3 className="md:text-[36px] sm:text-3xl text-2xl font-extrabold sm:mr-4 mr-2">Semua Laporan</h3>
        <img src={terbaruIcon} alt="terbarud" className="lg:w-12 w-6" />
      </div>
      <div className="cardContainer flex flex-wrap justify-start gap-8 mt-12">
        {isLoading
          ? [...Array(3)].map((_, index) => <SkeletonCard key={index} />) // Tampilkan 3 skeleton card saat loading
          : dataSampah.map((item, index) => <Card dataSampah={item} index={index} key={index} />)}
      </div>
    </>
  );
};
